#!/usr/bin/env python
from colp import Color,HSV,HEX,RGB,by_name,detect_normalised
import code
import argparse
import sys
banner = """
\033[95m┌─┐┌─┐┬  ┬─┐
\033[92m│  │ ││  │─┘
\033[93m└─┘┘─┘┆─┘┆   \x1b[6;30;42mthe color processor\x1b[0m
"""
if __name__ == '__main__': 
    parser = argparse.ArgumentParser(prog='colp', description='Color Processor')
    parser.add_argument('-I'  , '--inplace'     , action='store_true'   , help='load script with transform')
    parser.add_argument('-i'  , '--interactive' , action='store_true'   , default=True                                                      , help='interactive mode')
    parser.add_argument('-c'  , '--command'     , metavar='command'     , default=True                                                      , help='run command')
    parser.add_argument('-n'  , '--no-banner'   , action='store_true'   , default=False                                                     , help='don\'t show  banner on interactive mode')
    parser.add_argument('-f'  , '--input-file'  , metavar='INPUT_FILE'  , help='load variables from file or stdin (-)')
    parser.add_argument('-l'  , '--load-script' , metavar='SCRIPT_FILE' , help='load script with transform function from file or stdin(-)')
    parser.add_argument('VAR' , nargs='*'       , help='variable')

    args = parser.parse_args()

    readlines = lambda filename: (sys.stdin if filename == '-' else open(filename, 'rb')).\
            readlines()
    
    if args.input_file:
        input_file_contents = readlines(args.input_file)
    
    if args.load_script:
        loaded_script = readlines(args.load_script)

    for c in args.VAR:
        exec(c)

    if args.interactive:
        code.interact(banner='' if args.no_banner else banner, \
                local=globals().update(locals()) or globals(), \
                readfunc=lambda x:input('' if not sys.stdin.isatty() else '>'), \
                exitmsg='')
